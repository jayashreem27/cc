networks:
  kafka-network:
    name: kafka-network
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  api:
    build:
      context: ./docker1
      dockerfile: Dockerfile.api
    container_name: cc-api-1
    networks:
      - kafka-network
    ports:
      - "8000:8000"
    depends_on:
      - kafka
    environment: 
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
    volumes:
      - ./docker1/api:/app/api
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  consumer:
    build:
      context: ./docker1
      dockerfile: Dockerfile.consumer
    container_name: kafka-consumer-1
    networks:
      - kafka-network
    depends_on:
      - kafka
    volumes:
      - ./docker1/api:/app/api
    command: ["python", "/app/api/consumer.py"]

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    networks:
      - kafka-network
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"

